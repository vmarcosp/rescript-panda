exception InvalidPandaConfig(string)

module Process = NodeJs.Process

module Styles = {
  open ReScriptAST
  let name = "styles"

  module Colors = {
    let name = "colors"
    let make = (config: Config.t) => {
      let colors = ["red", "green", "blue"]
      let customColors =
        config.theme
        ->Option.flatMap(theme => theme.extend)
        ->Option.flatMap(extend => extend.tokens)
        ->Option.flatMap(tokens => tokens.colors)
        ->Option.map(dict => dict->Dict.keysToArray)
        ->Option.getOr([])
        ->Array.map(color => (color, None))

      let nativeColors = colors->Array.map(color => (color, None))

      let variants = [...nativeColors, ...customColors]

      TypeDeclaration({
        name: "colors",
        type_: PolyVariant(variants),
      })
    }
  }

  let make = (config: Config.t) => {
    let stylesDefinition = TypeDeclaration({
      name,
      type_: Record([
        ("color", UserDefinedType(Colors.name)),
        ("backgroundColor", UserDefinedType(Colors.name)),
      ]),
    })

    [Colors.make(config), stylesDefinition]
  }
}

let createBindingsModule = (config: Config.t) => {
  open ReScriptAST
  Console.log(config)
  let styledSystemDir = NodeJs.Path.join([
    Process.process->Process.cwd,
    config.outdir,
    Constants.mainModuleFileName,
  ])

  let nodes = [
    ...Styles.make(config),
    ExternalDeclaration(
      Module(`${config.importMap}/css`),
      Identifier("css"),
      Function([UserDefinedType(Styles.name)], String),
      "css",
    ),
  ]

  let bindings = nodes->ReScriptCodegen.generate

  let fileContent = `
    // ⚠️ Generated by rescript-panda. Only edit this file if you want to stop using rescript-panda codegen.
    ${bindings}
  `

  NodeJs.Fs.writeFileSync(styledSystemDir, fileContent->NodeJs.Buffer.fromString)

  Js.log("✅ Created PandaCSS module.")
}

let run = async () => {
  let config = await Config.get()
  switch config {
  | Ok(config) => createBindingsModule(config)
  | Error(error) =>
    switch error {
    | MissingImportMap =>
      Console.log(
        `You forgot to define an ${Chalk.green(
            "importMap",
          )} in your Panda config. \nThe importMap field is required for rescript-panda to generate bindings properly.\n🔎 Check out https://panda-css.com/docs/references/config#importmap`,
      )
    | Otherwise => Console.log("Something went wrong.")
    }
  }
}
